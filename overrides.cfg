############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------



#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
control: pid
pid_kp: 19.585
pid_ki: 1.501
pid_kd: 63.901
rotation_distance: 22.1346562736
min_extrude_temp: 11


[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART
interpolate: True
run_current: 0.45


[probe]
z_offset = -1.420
speed: 5
samples_tolerance: 0.005
samples_tolerance_retries: 5

[heater_fan hotend_fan]
max_power: 1.0
shutdown_speed: 1.0
tachometer_pin: toolhead: PB15
tachometer_ppr: 2
heater: extruder
heater_temp: 50.0

[heater_fan Toolhead_Fan]
pin: toolhead: PA0
max_power: 1.0
shutdown_speed: 1.0
heater: heater_bed
heater_temp: 55.0

[heater_bed]
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

[stepper_x]
microsteps: 64
rotation_distance: 39.83
endstop_pin: toolhead:X_STOP
dir_pin: !X_DIR


[stepper_x1]
rotation_distance: 39.83
microsteps: 64
full_steps_per_rotation: 200
step_pin: X1_STEP
dir_pin: X1_DIR
enable_pin: !X1_ENABLE

[tmc5160 stepper_x1]
cs_pin: X1_TMCUART
spi_software_sclk_pin: DRIVER_SPI_SCK
spi_software_mosi_pin: DRIVER_SPI_MOSI
spi_software_miso_pin: DRIVER_SPI_MISO
interpolate: True
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0

[stepper_y]
microsteps: 64
rotation_distance: 39.82
dir_pin: !Y_DIR

[stepper_y1]
rotation_distance: 39.82
microsteps: 64
full_steps_per_rotation: 200
step_pin: Y1_STEP
dir_pin: Y1_DIR
enable_pin: !Y1_ENABLE

[tmc5160 stepper_y1]
cs_pin: Y1_TMCUART
spi_software_sclk_pin: DRIVER_SPI_SCK
spi_software_mosi_pin: DRIVER_SPI_MOSI
spi_software_miso_pin: DRIVER_SPI_MISO
interpolate: True
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0

[stepper_z]
microsteps: 64
dir_pin: !Z_DIR

[tmc5160 stepper_z]
run_current: 0.3

[stepper_z1]
microsteps: 64

[tmc5160 stepper_z1]
run_current: 0.3

[stepper_z2]
microsteps: 64
dir_pin: !Z2_DIR

[tmc5160 stepper_z2]
run_current: 0.3

[stepper_z3]
microsteps: 64

[tmc5160 stepper_z3]
run_current: 0.3

[skew_correction]

[quad_gantry_level]
points:
    50,50
    50,305
    305,305
    305,50
retries: 15

#[bed_mesh]
#mesh_min: 50, 50
#mesh_max: 305, 305
#probe_count: 7, 7

[printer]
max_accel: 4500

[resonance_tester]
probe_points:
    175,175,20

[input_shaper]
# Supported shapers: zv, mzv, zvd, ei, 2hump_ei, 3hump_ei
shaper_freq_x: 87.4
shaper_type_x: 2hump_ei
shaper_freq_y: 49.2
shaper_type_y: ei

[autotune_tmc stepper_x]
motor: omc-17hs19-2004s1
voltage: 48
[autotune_tmc stepper_y]
motor: omc-17hs19-2004s1
voltage: 48
[autotune_tmc stepper_x1]
motor: omc-17hs19-2004s1
voltage: 48
[autotune_tmc stepper_y1]
motor: omc-17hs19-2004s1
voltage: 48

[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
voltage: 48
[autotune_tmc stepper_z1]
motor: omc-17hs19-2004s1
voltage: 48
[autotune_tmc stepper_z2]
motor: omc-17hs19-2004s1
voltage: 48
[autotune_tmc stepper_z3]
motor: omc-17hs19-2004s1
voltage: 48

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg

[auto_speed]

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.
